@model CryptoFolio.ViewModels.TransactionViewModel
@{
    ViewBag.Title = "CreateTransaction";
}

<h2>CreateTransaction</h2>
<hr />

<div>
    <button class="btn btn-outline-success">@Html.ActionLink("Buy", "CreateBuyTransaction", "Transaction", null, new { @style = "color:white;" })</button>
    <button class="btn btn-danger">@Html.ActionLink("Sell", "CreateSellTransaction", "Transaction", null, new { @style = "color:white;" })</button>
</div>

@using (Html.BeginForm("CreateSellTransaction", "Transaction"))
{
    <div class="form-group">
        @Html.LabelFor(x => x.PortfolioID, "Portfolio")
        @Html.DropDownListFor(x => x.PortfolioID, new SelectList(Model.Portfolios, "PortfolioID", "Name"), "")
    </div>
    <div class="form-group">
        @Html.LabelFor(x => x.CoinID, "Coin")
        @Html.DropDownListFor(x => x.CoinID, new SelectList(Model.Coins, "CoinID", "Name"), "")
    </div>
    <div class="form-group">
        @Html.LabelFor(x => x.Quantity, "Quantity")
        @Html.TextBoxFor(x => x.Quantity, new { placeholder = "Quantity" })
    </div>
    <div class="form-group">
        @Html.LabelFor(x => x.DatePurchased, "Date Purchased")
        @Html.TextBoxFor(x => x.DatePurchased, new { type = "date", placeholder = "Date Purhcased" })
        @* checking branches *@
    </div>


    <button type="submit" class="btn btn-outline-success">Create</button>

}
