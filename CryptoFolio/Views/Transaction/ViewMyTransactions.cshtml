@model CryptoFolio.ViewModels.OposNaNaiViewModel

@{
    ViewBag.Title = "My Transactions";
}

<div class="form-group">
    @using (Html.BeginForm("ViewMyTransactions", "Transaction", FormMethod.Get))
    {    
    @Html.LabelFor(x => x.SelectedPortfolio, "Portfolio")
    @Html.DropDownListFor(x => x.SelectedPortfolio, new SelectList(Model.Portfolios, "Name", "Name"), "All", new { @id = "selectedPortfolio"})
    }
</div>

<table class="table table-striped table-hover table-dark">
    <thead>
        <tr>
            <th scope="col">Transaction ID</th>
            <th scope="col">Portfolio ID</th>
            <th scope="col">Portfolio Name</th>
            <th scope="col">Coin ID</th>
            <th scope="col">Coin Name</th>
            <th scope="col">Quantity</th>
            <th scope="col">Date Purchased</th>
            <th scope="col">Buy/Sell</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.Bla)
        {
            <tr>
                <th scope="row">@item.TransactionID</th>
                <td>@item.PortfolioID</td>
                <td>@item.PortfolioName</td>
                <td>@item.CoinID</td>
                <td>@item.CoinName</td>
                <td>@item.Quantity</td>
                <td>@item.DateOfPurchase</td>
                @if(item.Buy)
                {
                    <td style="color:green;">Buy </td>
                }
                else
                {
                    <td style="color:red;">Sell</td>
                }

                @*<td><button class="btn btn-outline-success">@Html.ActionLink("Watch", "CreateWatchCoin", "Market", null, new { })</button></td>
                    <td><button class="btn btn-outline-warning">@Html.ActionLink("Add Transaction", "ViewMarket", "Market", null, new { })</button></td>*@

            </tr>
        }
    </tbody>
</table>

@section scripts {
    <script>
        window.onload = () => {
            const selectedPortfolio = document.getElementById("selectedPortfolio");
            selectedPortfolio.onchange = (e) => {
                e.target.form.submit();
            }

        }
    </script>
    }
